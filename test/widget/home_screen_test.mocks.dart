// Mocks generated by Mockito 5.4.4 from annotations
// in suggest_cache_demo/test/widget/home_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:suggest_cache_demo/models/suggest_item.dart' as _i5;
import 'package:suggest_cache_demo/services/local_service.dart' as _i4;
import 'package:suggest_cache_demo/utils/suggest_cache_generator.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [SuggestCacheGenerator].
///
/// See the documentation for Mockito's code generation for more information.
class MockSuggestCacheGenerator extends _i1.Mock
    implements _i2.SuggestCacheGenerator {
  MockSuggestCacheGenerator() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> generateSuggestCache() => (super.noSuchMethod(
        Invocation.method(
          #generateSuggestCache,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}

/// A class which mocks [LocalService].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalService extends _i1.Mock implements _i4.LocalService {
  MockLocalService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> saveStockMaster(String? data) => (super.noSuchMethod(
        Invocation.method(
          #saveStockMaster,
          [data],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<String?> getStockMaster() => (super.noSuchMethod(
        Invocation.method(
          #getStockMaster,
          [],
        ),
        returnValue: _i3.Future<String?>.value(),
      ) as _i3.Future<String?>);

  @override
  _i3.Future<void> saveSuggestDictionary(String? data) => (super.noSuchMethod(
        Invocation.method(
          #saveSuggestDictionary,
          [data],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<String?> getSuggestDictionary() => (super.noSuchMethod(
        Invocation.method(
          #getSuggestDictionary,
          [],
        ),
        returnValue: _i3.Future<String?>.value(),
      ) as _i3.Future<String?>);

  @override
  _i3.Future<void> saveStockMasterHash(String? hash) => (super.noSuchMethod(
        Invocation.method(
          #saveStockMasterHash,
          [hash],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<String?> getStockMasterHash() => (super.noSuchMethod(
        Invocation.method(
          #getStockMasterHash,
          [],
        ),
        returnValue: _i3.Future<String?>.value(),
      ) as _i3.Future<String?>);

  @override
  _i3.Future<void> saveSuggestHash(String? hash) => (super.noSuchMethod(
        Invocation.method(
          #saveSuggestHash,
          [hash],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<String?> getSuggestHash() => (super.noSuchMethod(
        Invocation.method(
          #getSuggestHash,
          [],
        ),
        returnValue: _i3.Future<String?>.value(),
      ) as _i3.Future<String?>);

  @override
  _i3.Future<void> saveSuggestCache(List<_i5.SuggestItem>? suggestCache) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveSuggestCache,
          [suggestCache],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<List<_i5.SuggestItem>?> getSuggestCache() => (super.noSuchMethod(
        Invocation.method(
          #getSuggestCache,
          [],
        ),
        returnValue: _i3.Future<List<_i5.SuggestItem>?>.value(),
      ) as _i3.Future<List<_i5.SuggestItem>?>);
}
